// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: blog.proto

package blog

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Blog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int64      `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID    int64      `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`        // 作者ID
	Title     string     `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`           // 博客标题/文件夹名
	IsFolder  bool       `protobuf:"varint,4,opt,name=IsFolder,proto3" json:"IsFolder,omitempty"`    // 是否是文件夹
	Content   string     `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`       // 博客正文
	Status    int32      `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`        // 博客状态 1:所有人可见 2. 仅自己可见 3. 删除状态
	FolderID  int64      `protobuf:"varint,7,opt,name=FolderID,proto3" json:"FolderID,omitempty"`    // 博客所属文件夹，0 则无类别或者说根目录
	Extra     *BlogExtra `protobuf:"bytes,8,opt,name=Extra,proto3" json:"Extra,omitempty"`           // 额外的一些字段
	CreatedAt int64      `protobuf:"varint,9,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`  // 创建时间
	UpdatedAt int64      `protobuf:"varint,10,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"` // 更新时间
}

func (x *Blog) Reset() {
	*x = Blog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blog) ProtoMessage() {}

func (x *Blog) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blog.ProtoReflect.Descriptor instead.
func (*Blog) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{0}
}

func (x *Blog) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Blog) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Blog) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Blog) GetIsFolder() bool {
	if x != nil {
		return x.IsFolder
	}
	return false
}

func (x *Blog) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Blog) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Blog) GetFolderID() int64 {
	if x != nil {
		return x.FolderID
	}
	return 0
}

func (x *Blog) GetExtra() *BlogExtra {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *Blog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Blog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type BlogExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BlogExtra) Reset() {
	*x = BlogExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogExtra) ProtoMessage() {}

func (x *BlogExtra) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogExtra.ProtoReflect.Descriptor instead.
func (*BlogExtra) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{1}
}

type GetBlogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs          []int64 `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs,omitempty"`
	UserIDs      []int64 `protobuf:"varint,2,rep,packed,name=UserIDs,proto3" json:"UserIDs,omitempty"`          // 作者ID
	Title        *string `protobuf:"bytes,3,opt,name=Title,proto3,oneof" json:"Title,omitempty"`                // 博客标题/文件夹名
	IsFolder     *bool   `protobuf:"varint,4,opt,name=IsFolder,proto3,oneof" json:"IsFolder,omitempty"`         // 是否是文件夹
	Status       *int32  `protobuf:"varint,5,opt,name=Status,proto3,oneof" json:"Status,omitempty"`             // 博客状态 1:所有人可见 2. 仅自己可见 3. 删除状态
	FolderID     *int64  `protobuf:"varint,6,opt,name=FolderID,proto3,oneof" json:"FolderID,omitempty"`         // 博客所属文件夹，0 则无类别或者说根目录
	CreatedAtGTE *int64  `protobuf:"varint,7,opt,name=CreatedAtGTE,proto3,oneof" json:"CreatedAtGTE,omitempty"` // 创建时间大于等于
	Offset       int32   `protobuf:"varint,98,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit        int32   `protobuf:"varint,99,opt,name=Limit,proto3" json:"Limit,omitempty"`
	NeedCount    *bool   `protobuf:"varint,100,opt,name=NeedCount,proto3,oneof" json:"NeedCount,omitempty"`
}

func (x *GetBlogListReq) Reset() {
	*x = GetBlogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlogListReq) ProtoMessage() {}

func (x *GetBlogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlogListReq.ProtoReflect.Descriptor instead.
func (*GetBlogListReq) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{2}
}

func (x *GetBlogListReq) GetIDs() []int64 {
	if x != nil {
		return x.IDs
	}
	return nil
}

func (x *GetBlogListReq) GetUserIDs() []int64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *GetBlogListReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *GetBlogListReq) GetIsFolder() bool {
	if x != nil && x.IsFolder != nil {
		return *x.IsFolder
	}
	return false
}

func (x *GetBlogListReq) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *GetBlogListReq) GetFolderID() int64 {
	if x != nil && x.FolderID != nil {
		return *x.FolderID
	}
	return 0
}

func (x *GetBlogListReq) GetCreatedAtGTE() int64 {
	if x != nil && x.CreatedAtGTE != nil {
		return *x.CreatedAtGTE
	}
	return 0
}

func (x *GetBlogListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetBlogListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetBlogListReq) GetNeedCount() bool {
	if x != nil && x.NeedCount != nil {
		return *x.NeedCount
	}
	return false
}

type GetBlogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs        []int64         `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs,omitempty"`
	Blogs      map[int64]*Blog `protobuf:"bytes,2,rep,name=Blogs,proto3" json:"Blogs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HasMore    bool            `protobuf:"varint,98,opt,name=HasMore,proto3" json:"HasMore,omitempty"`
	TotalCount int32           `protobuf:"varint,99,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
}

func (x *GetBlogListResp) Reset() {
	*x = GetBlogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlogListResp) ProtoMessage() {}

func (x *GetBlogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlogListResp.ProtoReflect.Descriptor instead.
func (*GetBlogListResp) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{3}
}

func (x *GetBlogListResp) GetIDs() []int64 {
	if x != nil {
		return x.IDs
	}
	return nil
}

func (x *GetBlogListResp) GetBlogs() map[int64]*Blog {
	if x != nil {
		return x.Blogs
	}
	return nil
}

func (x *GetBlogListResp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetBlogListResp) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CreateBlogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int64  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`     // 作者ID
	Title    string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`        // 博客标题/文件夹名
	IsFolder bool   `protobuf:"varint,3,opt,name=IsFolder,proto3" json:"IsFolder,omitempty"` // 是否是文件夹
	Content  string `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`    // 博客正文
	Status   int32  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`     // 博客状态 1:所有人可见 2. 仅自己可见 3. 删除状态
	FolderID int64  `protobuf:"varint,6,opt,name=FolderID,proto3" json:"FolderID,omitempty"` // 博客所属文件夹，0 则无类别或者说根目录
}

func (x *CreateBlogReq) Reset() {
	*x = CreateBlogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBlogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBlogReq) ProtoMessage() {}

func (x *CreateBlogReq) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBlogReq.ProtoReflect.Descriptor instead.
func (*CreateBlogReq) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{4}
}

func (x *CreateBlogReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *CreateBlogReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateBlogReq) GetIsFolder() bool {
	if x != nil {
		return x.IsFolder
	}
	return false
}

func (x *CreateBlogReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateBlogReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateBlogReq) GetFolderID() int64 {
	if x != nil {
		return x.FolderID
	}
	return 0
}

type CreateBlogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateBlogResp) Reset() {
	*x = CreateBlogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBlogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBlogResp) ProtoMessage() {}

func (x *CreateBlogResp) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBlogResp.ProtoReflect.Descriptor instead.
func (*CreateBlogResp) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{5}
}

type UpdateBlogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       int64      `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title    *string    `protobuf:"bytes,2,opt,name=Title,proto3,oneof" json:"Title,omitempty"`        // 博客标题/文件夹名
	Content  *string    `protobuf:"bytes,3,opt,name=Content,proto3,oneof" json:"Content,omitempty"`    // 博客正文
	Status   *int32     `protobuf:"varint,4,opt,name=Status,proto3,oneof" json:"Status,omitempty"`     // 博客状态 1:所有人可见 2. 仅自己可见 3. 删除状态
	FolderID *int64     `protobuf:"varint,5,opt,name=FolderID,proto3,oneof" json:"FolderID,omitempty"` // 博客所属文件夹，0 则无类别或者说根目录
	Extra    *BlogExtra `protobuf:"bytes,6,opt,name=Extra,proto3,oneof" json:"Extra,omitempty"`        // 额外的一些字段
}

func (x *UpdateBlogReq) Reset() {
	*x = UpdateBlogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBlogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBlogReq) ProtoMessage() {}

func (x *UpdateBlogReq) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBlogReq.ProtoReflect.Descriptor instead.
func (*UpdateBlogReq) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateBlogReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateBlogReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateBlogReq) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *UpdateBlogReq) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *UpdateBlogReq) GetFolderID() int64 {
	if x != nil && x.FolderID != nil {
		return *x.FolderID
	}
	return 0
}

func (x *UpdateBlogReq) GetExtra() *BlogExtra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type UpdateBlogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBlogResp) Reset() {
	*x = UpdateBlogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBlogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBlogResp) ProtoMessage() {}

func (x *UpdateBlogResp) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBlogResp.ProtoReflect.Descriptor instead.
func (*UpdateBlogResp) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{7}
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64         `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                   // 评论ID
	CommentType int32         `protobuf:"varint,2,opt,name=CommentType,proto3" json:"CommentType,omitempty"` // 评论类型：1. 对博客的评论 2. 对评论的评论 3. 对用户的评论
	Content     string        `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`          // 内容
	ToID        int64         `protobuf:"varint,4,opt,name=ToID,proto3" json:"ToID,omitempty"`               // 此评论所归属的id,若type是博客，此id是评论的博客ID
	FromUserID  int64         `protobuf:"varint,5,opt,name=FromUserID,proto3" json:"FromUserID,omitempty"`   // 评论发起者
	ToUserID    int64         `protobuf:"varint,6,opt,name=ToUserID,proto3" json:"ToUserID,omitempty"`       // 评论所回应的人，若是博客则是写博客的人ID
	Extra       *CommentExtra `protobuf:"bytes,7,opt,name=Extra,proto3" json:"Extra,omitempty"`              // extra
	CreatedAt   int64         `protobuf:"varint,8,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`     // 创建时间
	HasReply    bool          `protobuf:"varint,9,opt,name=HasReply,proto3" json:"HasReply,omitempty"`       // 此评论是否有回复
	Reply       *Comment      `protobuf:"bytes,10,opt,name=Reply,proto3" json:"Reply,omitempty"`             // 返回第一条回复
	Status      int32         `protobuf:"varint,11,opt,name=Status,proto3" json:"Status,omitempty"`          // 评论的状态 1: 正常，2: 修改过 3. 删除
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{8}
}

func (x *Comment) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Comment) GetCommentType() int32 {
	if x != nil {
		return x.CommentType
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetToID() int64 {
	if x != nil {
		return x.ToID
	}
	return 0
}

func (x *Comment) GetFromUserID() int64 {
	if x != nil {
		return x.FromUserID
	}
	return 0
}

func (x *Comment) GetToUserID() int64 {
	if x != nil {
		return x.ToUserID
	}
	return 0
}

func (x *Comment) GetExtra() *CommentExtra {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *Comment) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Comment) GetHasReply() bool {
	if x != nil {
		return x.HasReply
	}
	return false
}

func (x *Comment) GetReply() *Comment {
	if x != nil {
		return x.Reply
	}
	return nil
}

func (x *Comment) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CommentExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommentExtra) Reset() {
	*x = CommentExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentExtra) ProtoMessage() {}

func (x *CommentExtra) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentExtra.ProtoReflect.Descriptor instead.
func (*CommentExtra) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{9}
}

type GetCommentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToID        *int64 `protobuf:"varint,1,opt,name=ToID,proto3,oneof" json:"ToID,omitempty"`
	CommentType *int32 `protobuf:"varint,2,opt,name=CommentType,proto3,oneof" json:"CommentType,omitempty"`
	FromUserID  *int64 `protobuf:"varint,3,opt,name=FromUserID,proto3,oneof" json:"FromUserID,omitempty"`
	ToUserID    *int64 `protobuf:"varint,4,opt,name=ToUserID,proto3,oneof" json:"ToUserID,omitempty"`
	Offset      int32  `protobuf:"varint,98,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,99,opt,name=Limit,proto3" json:"Limit,omitempty"`
	NeedCount   *bool  `protobuf:"varint,100,opt,name=NeedCount,proto3,oneof" json:"NeedCount,omitempty"`
}

func (x *GetCommentListReq) Reset() {
	*x = GetCommentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentListReq) ProtoMessage() {}

func (x *GetCommentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentListReq.ProtoReflect.Descriptor instead.
func (*GetCommentListReq) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{10}
}

func (x *GetCommentListReq) GetToID() int64 {
	if x != nil && x.ToID != nil {
		return *x.ToID
	}
	return 0
}

func (x *GetCommentListReq) GetCommentType() int32 {
	if x != nil && x.CommentType != nil {
		return *x.CommentType
	}
	return 0
}

func (x *GetCommentListReq) GetFromUserID() int64 {
	if x != nil && x.FromUserID != nil {
		return *x.FromUserID
	}
	return 0
}

func (x *GetCommentListReq) GetToUserID() int64 {
	if x != nil && x.ToUserID != nil {
		return *x.ToUserID
	}
	return 0
}

func (x *GetCommentListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetCommentListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetCommentListReq) GetNeedCount() bool {
	if x != nil && x.NeedCount != nil {
		return *x.NeedCount
	}
	return false
}

type GetCommentListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs        []int64            `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs,omitempty"`
	Comments   map[int64]*Comment `protobuf:"bytes,2,rep,name=Comments,proto3" json:"Comments,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HasMore    bool               `protobuf:"varint,98,opt,name=HasMore,proto3" json:"HasMore,omitempty"`
	TotalCount int32              `protobuf:"varint,99,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
}

func (x *GetCommentListResp) Reset() {
	*x = GetCommentListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentListResp) ProtoMessage() {}

func (x *GetCommentListResp) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentListResp.ProtoReflect.Descriptor instead.
func (*GetCommentListResp) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{11}
}

func (x *GetCommentListResp) GetIDs() []int64 {
	if x != nil {
		return x.IDs
	}
	return nil
}

func (x *GetCommentListResp) GetComments() map[int64]*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetCommentListResp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetCommentListResp) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type UpdateCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Content *string `protobuf:"bytes,2,opt,name=Content,proto3,oneof" json:"Content,omitempty"`
	Status  *int32  `protobuf:"varint,3,opt,name=Status,proto3,oneof" json:"Status,omitempty"`
}

func (x *UpdateCommentReq) Reset() {
	*x = UpdateCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentReq) ProtoMessage() {}

func (x *UpdateCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentReq.ProtoReflect.Descriptor instead.
func (*UpdateCommentReq) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateCommentReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateCommentReq) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *UpdateCommentReq) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type UpdateCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCommentResp) Reset() {
	*x = UpdateCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentResp) ProtoMessage() {}

func (x *UpdateCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentResp.ProtoReflect.Descriptor instead.
func (*UpdateCommentResp) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{13}
}

type CreateCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentType int32  `protobuf:"varint,2,opt,name=CommentType,proto3" json:"CommentType,omitempty"` // 评论类型：1. 对博客的评论 2. 对评论的评论 3. 对用户的评论
	Content     string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`          // 内容
	ToID        int64  `protobuf:"varint,4,opt,name=ToID,proto3" json:"ToID,omitempty"`               // 此评论所归属的id,若type是博客，此id是评论的博客ID
	FromUserID  int64  `protobuf:"varint,5,opt,name=FromUserID,proto3" json:"FromUserID,omitempty"`   // 评论发起者
	ToUserID    int64  `protobuf:"varint,6,opt,name=ToUserID,proto3" json:"ToUserID,omitempty"`       // 评论所回应的人，若是博客则是写博客的人ID
}

func (x *CreateCommentReq) Reset() {
	*x = CreateCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentReq) ProtoMessage() {}

func (x *CreateCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentReq.ProtoReflect.Descriptor instead.
func (*CreateCommentReq) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{14}
}

func (x *CreateCommentReq) GetCommentType() int32 {
	if x != nil {
		return x.CommentType
	}
	return 0
}

func (x *CreateCommentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateCommentReq) GetToID() int64 {
	if x != nil {
		return x.ToID
	}
	return 0
}

func (x *CreateCommentReq) GetFromUserID() int64 {
	if x != nil {
		return x.FromUserID
	}
	return 0
}

func (x *CreateCommentReq) GetToUserID() int64 {
	if x != nil {
		return x.ToUserID
	}
	return 0
}

type CreateCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCommentResp) Reset() {
	*x = CreateCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResp) ProtoMessage() {}

func (x *CreateCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResp.ProtoReflect.Descriptor instead.
func (*CreateCommentResp) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{15}
}

var File_blog_proto protoreflect.FileDescriptor

var file_blog_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x62, 0x6c,
	0x6f, 0x67, 0x22, 0x91, 0x02, 0x0a, 0x04, 0x42, 0x6c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x52, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x0b, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x67, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x22, 0xfe, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x49, 0x44, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x01, 0x52, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52,
	0x08, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x47, 0x54, 0x45, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x04, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x47,
	0x54, 0x45, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x62, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x63, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x4e, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x09, 0x4e, 0x65, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x47, 0x54, 0x45, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x4e, 0x65, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x49, 0x44, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x42, 0x6c,
	0x6f, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6c, 0x6f, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x42, 0x6c, 0x6f,
	0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x62, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x48, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x63, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x44, 0x0a, 0x0a,
	0x42, 0x6c, 0x6f, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xa7, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x10, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0xfb,
	0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x08, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x42,
	0x6c, 0x6f, 0x67, 0x45, 0x78, 0x74, 0x72, 0x61, 0x48, 0x04, 0x52, 0x05, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x22, 0x10, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0xc6,
	0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x6f, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x6f, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x72,
	0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x48, 0x61, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x48, 0x61, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x67,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x22, 0xad, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x04, 0x54, 0x6f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x04, 0x54,
	0x6f, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0b, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x02, 0x52, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x08, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x62, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x63, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x21, 0x0a, 0x09, 0x4e, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x09, 0x4e, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x6f, 0x49, 0x44, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x4e, 0x65,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x49, 0x44, 0x73,
	0x12, 0x42, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18,
	0x62, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x48, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x4a,
	0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x75, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1d,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x6f, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x6f, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x46,
	0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0x84, 0x03, 0x0a,
	0x0b, 0x42, 0x6c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x6c, 0x6f, 0x67, 0x12, 0x13, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x37, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x67, 0x12,
	0x13, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x62,
	0x6c, 0x6f, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x40, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x40, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x62, 0x6c, 0x6f,
	0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x62, 0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blog_proto_rawDescOnce sync.Once
	file_blog_proto_rawDescData = file_blog_proto_rawDesc
)

func file_blog_proto_rawDescGZIP() []byte {
	file_blog_proto_rawDescOnce.Do(func() {
		file_blog_proto_rawDescData = protoimpl.X.CompressGZIP(file_blog_proto_rawDescData)
	})
	return file_blog_proto_rawDescData
}

var file_blog_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_blog_proto_goTypes = []interface{}{
	(*Blog)(nil),               // 0: blog.Blog
	(*BlogExtra)(nil),          // 1: blog.BlogExtra
	(*GetBlogListReq)(nil),     // 2: blog.GetBlogListReq
	(*GetBlogListResp)(nil),    // 3: blog.GetBlogListResp
	(*CreateBlogReq)(nil),      // 4: blog.CreateBlogReq
	(*CreateBlogResp)(nil),     // 5: blog.CreateBlogResp
	(*UpdateBlogReq)(nil),      // 6: blog.UpdateBlogReq
	(*UpdateBlogResp)(nil),     // 7: blog.UpdateBlogResp
	(*Comment)(nil),            // 8: blog.Comment
	(*CommentExtra)(nil),       // 9: blog.CommentExtra
	(*GetCommentListReq)(nil),  // 10: blog.GetCommentListReq
	(*GetCommentListResp)(nil), // 11: blog.GetCommentListResp
	(*UpdateCommentReq)(nil),   // 12: blog.UpdateCommentReq
	(*UpdateCommentResp)(nil),  // 13: blog.UpdateCommentResp
	(*CreateCommentReq)(nil),   // 14: blog.CreateCommentReq
	(*CreateCommentResp)(nil),  // 15: blog.CreateCommentResp
	nil,                        // 16: blog.GetBlogListResp.BlogsEntry
	nil,                        // 17: blog.GetCommentListResp.CommentsEntry
}
var file_blog_proto_depIdxs = []int32{
	1,  // 0: blog.Blog.Extra:type_name -> blog.BlogExtra
	16, // 1: blog.GetBlogListResp.Blogs:type_name -> blog.GetBlogListResp.BlogsEntry
	1,  // 2: blog.UpdateBlogReq.Extra:type_name -> blog.BlogExtra
	9,  // 3: blog.Comment.Extra:type_name -> blog.CommentExtra
	8,  // 4: blog.Comment.Reply:type_name -> blog.Comment
	17, // 5: blog.GetCommentListResp.Comments:type_name -> blog.GetCommentListResp.CommentsEntry
	0,  // 6: blog.GetBlogListResp.BlogsEntry.value:type_name -> blog.Blog
	8,  // 7: blog.GetCommentListResp.CommentsEntry.value:type_name -> blog.Comment
	2,  // 8: blog.BlogService.GetBlogList:input_type -> blog.GetBlogListReq
	4,  // 9: blog.BlogService.CreateBlog:input_type -> blog.CreateBlogReq
	6,  // 10: blog.BlogService.UpdateBlog:input_type -> blog.UpdateBlogReq
	10, // 11: blog.BlogService.GetCommentList:input_type -> blog.GetCommentListReq
	12, // 12: blog.BlogService.UpdateComment:input_type -> blog.UpdateCommentReq
	14, // 13: blog.BlogService.CreateComment:input_type -> blog.CreateCommentReq
	3,  // 14: blog.BlogService.GetBlogList:output_type -> blog.GetBlogListResp
	5,  // 15: blog.BlogService.CreateBlog:output_type -> blog.CreateBlogResp
	7,  // 16: blog.BlogService.UpdateBlog:output_type -> blog.UpdateBlogResp
	11, // 17: blog.BlogService.GetCommentList:output_type -> blog.GetCommentListResp
	13, // 18: blog.BlogService.UpdateComment:output_type -> blog.UpdateCommentResp
	15, // 19: blog.BlogService.CreateComment:output_type -> blog.CreateCommentResp
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_blog_proto_init() }
func file_blog_proto_init() {
	if File_blog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBlogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBlogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBlogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBlogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_blog_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_blog_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_blog_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_blog_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blog_proto_goTypes,
		DependencyIndexes: file_blog_proto_depIdxs,
		MessageInfos:      file_blog_proto_msgTypes,
	}.Build()
	File_blog_proto = out.File
	file_blog_proto_rawDesc = nil
	file_blog_proto_goTypes = nil
	file_blog_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BlogServiceClient is the client API for BlogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlogServiceClient interface {
	// blog 增删改查接口
	GetBlogList(ctx context.Context, in *GetBlogListReq, opts ...grpc.CallOption) (*GetBlogListResp, error)
	CreateBlog(ctx context.Context, in *CreateBlogReq, opts ...grpc.CallOption) (*CreateBlogResp, error)
	UpdateBlog(ctx context.Context, in *UpdateBlogReq, opts ...grpc.CallOption) (*UpdateBlogResp, error)
	// comment 增删改查接口
	GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListResp, error)
	UpdateComment(ctx context.Context, in *UpdateCommentReq, opts ...grpc.CallOption) (*UpdateCommentResp, error)
	CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*CreateCommentResp, error)
}

type blogServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBlogServiceClient(cc grpc.ClientConnInterface) BlogServiceClient {
	return &blogServiceClient{cc}
}

func (c *blogServiceClient) GetBlogList(ctx context.Context, in *GetBlogListReq, opts ...grpc.CallOption) (*GetBlogListResp, error) {
	out := new(GetBlogListResp)
	err := c.cc.Invoke(ctx, "/blog.BlogService/GetBlogList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) CreateBlog(ctx context.Context, in *CreateBlogReq, opts ...grpc.CallOption) (*CreateBlogResp, error) {
	out := new(CreateBlogResp)
	err := c.cc.Invoke(ctx, "/blog.BlogService/CreateBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) UpdateBlog(ctx context.Context, in *UpdateBlogReq, opts ...grpc.CallOption) (*UpdateBlogResp, error) {
	out := new(UpdateBlogResp)
	err := c.cc.Invoke(ctx, "/blog.BlogService/UpdateBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListResp, error) {
	out := new(GetCommentListResp)
	err := c.cc.Invoke(ctx, "/blog.BlogService/GetCommentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) UpdateComment(ctx context.Context, in *UpdateCommentReq, opts ...grpc.CallOption) (*UpdateCommentResp, error) {
	out := new(UpdateCommentResp)
	err := c.cc.Invoke(ctx, "/blog.BlogService/UpdateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*CreateCommentResp, error) {
	out := new(CreateCommentResp)
	err := c.cc.Invoke(ctx, "/blog.BlogService/CreateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlogServiceServer is the server API for BlogService service.
type BlogServiceServer interface {
	// blog 增删改查接口
	GetBlogList(context.Context, *GetBlogListReq) (*GetBlogListResp, error)
	CreateBlog(context.Context, *CreateBlogReq) (*CreateBlogResp, error)
	UpdateBlog(context.Context, *UpdateBlogReq) (*UpdateBlogResp, error)
	// comment 增删改查接口
	GetCommentList(context.Context, *GetCommentListReq) (*GetCommentListResp, error)
	UpdateComment(context.Context, *UpdateCommentReq) (*UpdateCommentResp, error)
	CreateComment(context.Context, *CreateCommentReq) (*CreateCommentResp, error)
}

// UnimplementedBlogServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBlogServiceServer struct {
}

func (*UnimplementedBlogServiceServer) GetBlogList(context.Context, *GetBlogListReq) (*GetBlogListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlogList not implemented")
}
func (*UnimplementedBlogServiceServer) CreateBlog(context.Context, *CreateBlogReq) (*CreateBlogResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBlog not implemented")
}
func (*UnimplementedBlogServiceServer) UpdateBlog(context.Context, *UpdateBlogReq) (*UpdateBlogResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBlog not implemented")
}
func (*UnimplementedBlogServiceServer) GetCommentList(context.Context, *GetCommentListReq) (*GetCommentListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommentList not implemented")
}
func (*UnimplementedBlogServiceServer) UpdateComment(context.Context, *UpdateCommentReq) (*UpdateCommentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateComment not implemented")
}
func (*UnimplementedBlogServiceServer) CreateComment(context.Context, *CreateCommentReq) (*CreateCommentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateComment not implemented")
}

func RegisterBlogServiceServer(s *grpc.Server, srv BlogServiceServer) {
	s.RegisterService(&_BlogService_serviceDesc, srv)
}

func _BlogService_GetBlogList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlogListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).GetBlogList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/GetBlogList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).GetBlogList(ctx, req.(*GetBlogListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_CreateBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBlogReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).CreateBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/CreateBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).CreateBlog(ctx, req.(*CreateBlogReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_UpdateBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBlogReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).UpdateBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/UpdateBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).UpdateBlog(ctx, req.(*UpdateBlogReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_GetCommentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommentListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).GetCommentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/GetCommentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).GetCommentList(ctx, req.(*GetCommentListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_UpdateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).UpdateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/UpdateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).UpdateComment(ctx, req.(*UpdateCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_CreateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).CreateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/CreateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).CreateComment(ctx, req.(*CreateCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blog.BlogService",
	HandlerType: (*BlogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBlogList",
			Handler:    _BlogService_GetBlogList_Handler,
		},
		{
			MethodName: "CreateBlog",
			Handler:    _BlogService_CreateBlog_Handler,
		},
		{
			MethodName: "UpdateBlog",
			Handler:    _BlogService_UpdateBlog_Handler,
		},
		{
			MethodName: "GetCommentList",
			Handler:    _BlogService_GetCommentList_Handler,
		},
		{
			MethodName: "UpdateComment",
			Handler:    _BlogService_UpdateComment_Handler,
		},
		{
			MethodName: "CreateComment",
			Handler:    _BlogService_CreateComment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blog.proto",
}
