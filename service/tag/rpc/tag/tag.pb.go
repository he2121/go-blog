// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: tag.proto

package tag

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityType int32

const (
	EntityType_EntityTypeUnKnow  EntityType = 0
	EntityType_EntityTypeBlog    EntityType = 1
	EntityType_EntityTypeComment EntityType = 2
	EntityType_EntityTypeUser    EntityType = 3
)

// Enum value maps for EntityType.
var (
	EntityType_name = map[int32]string{
		0: "EntityTypeUnKnow",
		1: "EntityTypeBlog",
		2: "EntityTypeComment",
		3: "EntityTypeUser",
	}
	EntityType_value = map[string]int32{
		"EntityTypeUnKnow":  0,
		"EntityTypeBlog":    1,
		"EntityTypeComment": 2,
		"EntityTypeUser":    3,
	}
)

func (x EntityType) Enum() *EntityType {
	p := new(EntityType)
	*p = x
	return p
}

func (x EntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_tag_proto_enumTypes[0].Descriptor()
}

func (EntityType) Type() protoreflect.EnumType {
	return &file_tag_proto_enumTypes[0]
}

func (x EntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityType.Descriptor instead.
func (EntityType) EnumDescriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{0}
}

type ActionType int32

const (
	ActionType_ActionTypeUnKnow      ActionType = 0
	ActionType_ActionTypeView        ActionType = 1
	ActionType_ActionTypeLike        ActionType = 2 // 点赞
	ActionType_ActionTypeUnLike      ActionType = 3 // 取消点赞，反向操作
	ActionType_ActionTypeHate        ActionType = 4 // 厌恶
	ActionType_ActionTypeUnHate      ActionType = 5 // 取消厌恶，反向操作
	ActionType_ActionTypeFollowing   ActionType = 6 // 关注，
	ActionType_ActionTypeUnFollowing ActionType = 7 // 取消关注，反向操作
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "ActionTypeUnKnow",
		1: "ActionTypeView",
		2: "ActionTypeLike",
		3: "ActionTypeUnLike",
		4: "ActionTypeHate",
		5: "ActionTypeUnHate",
		6: "ActionTypeFollowing",
		7: "ActionTypeUnFollowing",
	}
	ActionType_value = map[string]int32{
		"ActionTypeUnKnow":      0,
		"ActionTypeView":        1,
		"ActionTypeLike":        2,
		"ActionTypeUnLike":      3,
		"ActionTypeHate":        4,
		"ActionTypeUnHate":      5,
		"ActionTypeFollowing":   6,
		"ActionTypeUnFollowing": 7,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_tag_proto_enumTypes[1].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_tag_proto_enumTypes[1]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{1}
}

type BasicTagType int32

const (
	BasicTagType_BasicTagTypeUnKnow    BasicTagType = 0
	BasicTagType_BasicTagTypeView      BasicTagType = 1
	BasicTagType_BasicTagTypeLike      BasicTagType = 2 // 点赞
	BasicTagType_BasicTagTypeHate      BasicTagType = 3 // 厌恶
	BasicTagType_BasicTagTypeFollowing BasicTagType = 4 // 关注的人，
	BasicTagType_BasicTagTypeFollower  BasicTagType = 5 // 跟随的人
)

// Enum value maps for BasicTagType.
var (
	BasicTagType_name = map[int32]string{
		0: "BasicTagTypeUnKnow",
		1: "BasicTagTypeView",
		2: "BasicTagTypeLike",
		3: "BasicTagTypeHate",
		4: "BasicTagTypeFollowing",
		5: "BasicTagTypeFollower",
	}
	BasicTagType_value = map[string]int32{
		"BasicTagTypeUnKnow":    0,
		"BasicTagTypeView":      1,
		"BasicTagTypeLike":      2,
		"BasicTagTypeHate":      3,
		"BasicTagTypeFollowing": 4,
		"BasicTagTypeFollower":  5,
	}
)

func (x BasicTagType) Enum() *BasicTagType {
	p := new(BasicTagType)
	*p = x
	return p
}

func (x BasicTagType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BasicTagType) Descriptor() protoreflect.EnumDescriptor {
	return file_tag_proto_enumTypes[2].Descriptor()
}

func (BasicTagType) Type() protoreflect.EnumType {
	return &file_tag_proto_enumTypes[2]
}

func (x BasicTagType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BasicTagType.Descriptor instead.
func (BasicTagType) EnumDescriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{2}
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64      `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	EntityType EntityType `protobuf:"varint,2,opt,name=EntityType,proto3,enum=tag.EntityType" json:"EntityType,omitempty"` // 标签的所属实体: 1: blog 2: comment 3: user
	EntityID   int64      `protobuf:"varint,3,opt,name=EntityID,proto3" json:"EntityID,omitempty"`                         // 标签所属实体ID
	Content    string     `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`                            // 标签内容
	Count      int32      `protobuf:"varint,5,opt,name=Count,proto3" json:"Count,omitempty"`                               // 标签提及次数
	CreatedAt  int64      `protobuf:"varint,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt  int64      `protobuf:"varint,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{0}
}

func (x *Tag) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Tag) GetEntityType() EntityType {
	if x != nil {
		return x.EntityType
	}
	return EntityType_EntityTypeUnKnow
}

func (x *Tag) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

func (x *Tag) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Tag) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Tag) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Tag) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetTagListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs        []int64     `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs,omitempty"`
	EntityIDs  []int64     `protobuf:"varint,2,rep,packed,name=EntityIDs,proto3" json:"EntityIDs,omitempty"` // 实体ID
	EntityType *EntityType `protobuf:"varint,3,opt,name=EntityType,proto3,enum=tag.EntityType,oneof" json:"EntityType,omitempty"`
	Content    *string     `protobuf:"bytes,4,opt,name=Content,proto3,oneof" json:"Content,omitempty"` // 内容的全量匹配
	OrderBy    *string     `protobuf:"bytes,5,opt,name=OrderBy,proto3,oneof" json:"OrderBy,omitempty"` // 排序字段
	Offset     int32       `protobuf:"varint,98,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit      int32       `protobuf:"varint,99,opt,name=Limit,proto3" json:"Limit,omitempty"`
	NeedCount  *bool       `protobuf:"varint,100,opt,name=NeedCount,proto3,oneof" json:"NeedCount,omitempty"`
}

func (x *GetTagListReq) Reset() {
	*x = GetTagListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagListReq) ProtoMessage() {}

func (x *GetTagListReq) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagListReq.ProtoReflect.Descriptor instead.
func (*GetTagListReq) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{1}
}

func (x *GetTagListReq) GetIDs() []int64 {
	if x != nil {
		return x.IDs
	}
	return nil
}

func (x *GetTagListReq) GetEntityIDs() []int64 {
	if x != nil {
		return x.EntityIDs
	}
	return nil
}

func (x *GetTagListReq) GetEntityType() EntityType {
	if x != nil && x.EntityType != nil {
		return *x.EntityType
	}
	return EntityType_EntityTypeUnKnow
}

func (x *GetTagListReq) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *GetTagListReq) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *GetTagListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTagListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTagListReq) GetNeedCount() bool {
	if x != nil && x.NeedCount != nil {
		return *x.NeedCount
	}
	return false
}

type GetTagListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs        []int64        `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs,omitempty"`
	Tags       map[int64]*Tag `protobuf:"bytes,2,rep,name=Tags,proto3" json:"Tags,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HasMore    bool           `protobuf:"varint,98,opt,name=HasMore,proto3" json:"HasMore,omitempty"`
	TotalCount int32          `protobuf:"varint,99,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
}

func (x *GetTagListResp) Reset() {
	*x = GetTagListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagListResp) ProtoMessage() {}

func (x *GetTagListResp) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagListResp.ProtoReflect.Descriptor instead.
func (*GetTagListResp) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{2}
}

func (x *GetTagListResp) GetIDs() []int64 {
	if x != nil {
		return x.IDs
	}
	return nil
}

func (x *GetTagListResp) GetTags() map[int64]*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetTagListResp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetTagListResp) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CreateTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityType EntityType `protobuf:"varint,2,opt,name=EntityType,proto3,enum=tag.EntityType" json:"EntityType,omitempty"` // 标签的所属实体: 1: blog 2: comment 3: user
	EntityID   int64      `protobuf:"varint,3,opt,name=EntityID,proto3" json:"EntityID,omitempty"`                         // 标签所属实体ID
	Content    string     `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`                            // 标签内容
}

func (x *CreateTagReq) Reset() {
	*x = CreateTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagReq) ProtoMessage() {}

func (x *CreateTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagReq.ProtoReflect.Descriptor instead.
func (*CreateTagReq) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTagReq) GetEntityType() EntityType {
	if x != nil {
		return x.EntityType
	}
	return EntityType_EntityTypeUnKnow
}

func (x *CreateTagReq) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

func (x *CreateTagReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateTagResp) Reset() {
	*x = CreateTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagResp) ProtoMessage() {}

func (x *CreateTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagResp.ProtoReflect.Descriptor instead.
func (*CreateTagResp) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{4}
}

type UpdateTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Count *int32 `protobuf:"varint,2,opt,name=Count,proto3,oneof" json:"Count,omitempty"`
}

func (x *UpdateTagReq) Reset() {
	*x = UpdateTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagReq) ProtoMessage() {}

func (x *UpdateTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagReq.ProtoReflect.Descriptor instead.
func (*UpdateTagReq) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTagReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateTagReq) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type UpdateTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTagResp) Reset() {
	*x = UpdateTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagResp) ProtoMessage() {}

func (x *UpdateTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagResp.ProtoReflect.Descriptor instead.
func (*UpdateTagResp) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{6}
}

// 基本 tag： 浏览量，点赞数，点踩数，关注的人，跟随的人
type BasicTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Views        int64   `protobuf:"varint,1,opt,name=Views,proto3" json:"Views,omitempty"`                      // 浏览次数
	LikeIDs      []int64 `protobuf:"varint,2,rep,packed,name=LikeIDs,proto3" json:"LikeIDs,omitempty"`           // 点赞用户 ID
	HateIDs      []int64 `protobuf:"varint,3,rep,packed,name=HateIDs,proto3" json:"HateIDs,omitempty"`           // 点踩用户 ID
	FollowingIDs []int64 `protobuf:"varint,4,rep,packed,name=FollowingIDs,proto3" json:"FollowingIDs,omitempty"` // 关注的人的 ID
	FollowerIDs  []int64 `protobuf:"varint,5,rep,packed,name=FollowerIDs,proto3" json:"FollowerIDs,omitempty"`   // 被 xx 关注的 ID 列表，跟 following 一个动作触发
}

func (x *BasicTag) Reset() {
	*x = BasicTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicTag) ProtoMessage() {}

func (x *BasicTag) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicTag.ProtoReflect.Descriptor instead.
func (*BasicTag) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{7}
}

func (x *BasicTag) GetViews() int64 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *BasicTag) GetLikeIDs() []int64 {
	if x != nil {
		return x.LikeIDs
	}
	return nil
}

func (x *BasicTag) GetHateIDs() []int64 {
	if x != nil {
		return x.HateIDs
	}
	return nil
}

func (x *BasicTag) GetFollowingIDs() []int64 {
	if x != nil {
		return x.FollowingIDs
	}
	return nil
}

func (x *BasicTag) GetFollowerIDs() []int64 {
	if x != nil {
		return x.FollowerIDs
	}
	return nil
}

type UpdateBasicTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     int64      `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`                             // 谁触发了这个事件
	ActionType ActionType `protobuf:"varint,2,opt,name=ActionType,proto3,enum=tag.ActionType" json:"ActionType,omitempty"` // 动作类型
	EntityType EntityType `protobuf:"varint,3,opt,name=EntityType,proto3,enum=tag.EntityType" json:"EntityType,omitempty"` // 操作对象实体类型
	EntityID   int64      `protobuf:"varint,4,opt,name=EntityID,proto3" json:"EntityID,omitempty"`                         // 操作对象实体ID
}

func (x *UpdateBasicTagReq) Reset() {
	*x = UpdateBasicTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBasicTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBasicTagReq) ProtoMessage() {}

func (x *UpdateBasicTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBasicTagReq.ProtoReflect.Descriptor instead.
func (*UpdateBasicTagReq) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateBasicTagReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateBasicTagReq) GetActionType() ActionType {
	if x != nil {
		return x.ActionType
	}
	return ActionType_ActionTypeUnKnow
}

func (x *UpdateBasicTagReq) GetEntityType() EntityType {
	if x != nil {
		return x.EntityType
	}
	return EntityType_EntityTypeUnKnow
}

func (x *UpdateBasicTagReq) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

type UpdateBasicTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBasicTagResp) Reset() {
	*x = UpdateBasicTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBasicTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBasicTagResp) ProtoMessage() {}

func (x *UpdateBasicTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBasicTagResp.ProtoReflect.Descriptor instead.
func (*UpdateBasicTagResp) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{9}
}

type MGetBasicTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityType EntityType   `protobuf:"varint,1,opt,name=EntityType,proto3,enum=tag.EntityType" json:"EntityType,omitempty"`        // 操作对象实体类型, 必传
	EntityIDs  []int64      `protobuf:"varint,2,rep,packed,name=EntityIDs,proto3" json:"EntityIDs,omitempty"`                       // 操作对象实体ID
	ActionType []ActionType `protobuf:"varint,3,rep,packed,name=ActionType,proto3,enum=tag.ActionType" json:"ActionType,omitempty"` // 指定要获取的基本 tag 信息，现在 4 种
}

func (x *MGetBasicTagReq) Reset() {
	*x = MGetBasicTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MGetBasicTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MGetBasicTagReq) ProtoMessage() {}

func (x *MGetBasicTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MGetBasicTagReq.ProtoReflect.Descriptor instead.
func (*MGetBasicTagReq) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{10}
}

func (x *MGetBasicTagReq) GetEntityType() EntityType {
	if x != nil {
		return x.EntityType
	}
	return EntityType_EntityTypeUnKnow
}

func (x *MGetBasicTagReq) GetEntityIDs() []int64 {
	if x != nil {
		return x.EntityIDs
	}
	return nil
}

func (x *MGetBasicTagReq) GetActionType() []ActionType {
	if x != nil {
		return x.ActionType
	}
	return nil
}

type MGetBasicTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIDs []int64             `protobuf:"varint,1,rep,packed,name=EntityIDs,proto3" json:"EntityIDs,omitempty"` // 操作对象实体ID
	BasicTags map[int64]*BasicTag `protobuf:"bytes,2,rep,name=BasicTags,proto3" json:"BasicTags,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MGetBasicTagResp) Reset() {
	*x = MGetBasicTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tag_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MGetBasicTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MGetBasicTagResp) ProtoMessage() {}

func (x *MGetBasicTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_tag_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MGetBasicTagResp.ProtoReflect.Descriptor instead.
func (*MGetBasicTagResp) Descriptor() ([]byte, []int) {
	return file_tag_proto_rawDescGZIP(), []int{11}
}

func (x *MGetBasicTagResp) GetEntityIDs() []int64 {
	if x != nil {
		return x.EntityIDs
	}
	return nil
}

func (x *MGetBasicTagResp) GetBasicTags() map[int64]*BasicTag {
	if x != nil {
		return x.BasicTags
	}
	return nil
}

var File_tag_proto protoreflect.FileDescriptor

var file_tag_proto_rawDesc = []byte{
	0x0a, 0x09, 0x74, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x74, 0x61, 0x67,
	0x22, 0xce, 0x01, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x74,
	0x61, 0x67, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xb9, 0x02, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x49, 0x44, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x44, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x62, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x63, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x4e, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x09, 0x4e, 0x65, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x4e, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd2, 0x01,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x49,
	0x44, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x18, 0x62, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x48, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x63, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x41, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x74, 0x61, 0x67, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x75, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x2f, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x43, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x05, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x0f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x9a, 0x01, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x56, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x69,
	0x65, 0x77, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x44, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x44, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x48, 0x61, 0x74, 0x65, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07,
	0x48, 0x61, 0x74, 0x65, 0x49, 0x44, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0b, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x44, 0x73, 0x22, 0xa9, 0x01,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x0a, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x0a,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x91, 0x01, 0x0a, 0x0f, 0x4d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x10, 0x4d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54,
	0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x61, 0x67, 0x2e,
	0x4d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x73, 0x1a, 0x4b, 0x0a, 0x0e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x74, 0x61, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x61, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x6c, 0x6f, 0x67, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x55, 0x73, 0x65, 0x72, 0x10, 0x03, 0x2a, 0xbe, 0x01, 0x0a, 0x0a, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x4c, 0x69, 0x6b, 0x65, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x10, 0x03, 0x12, 0x12, 0x0a,
	0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x61, 0x74, 0x65, 0x10,
	0x04, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x55,
	0x6e, 0x48, 0x61, 0x74, 0x65, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x10, 0x06,
	0x12, 0x19, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x10, 0x07, 0x2a, 0x9d, 0x01, 0x0a, 0x0c,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x4b, 0x6e,
	0x6f, 0x77, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x65, 0x77, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x61, 0x74, 0x65, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54,
	0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x10,
	0x04, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x10, 0x05, 0x32, 0xab, 0x02, 0x0a, 0x0a,
	0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x74,
	0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x32, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x11,
	0x2e, 0x74, 0x61, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x12, 0x11, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x12, 0x16, 0x2e, 0x74, 0x61,
	0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c,
	0x4d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x12, 0x14, 0x2e, 0x74,
	0x61, 0x67, 0x2e, 0x4d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x4d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x74,
	0x61, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tag_proto_rawDescOnce sync.Once
	file_tag_proto_rawDescData = file_tag_proto_rawDesc
)

func file_tag_proto_rawDescGZIP() []byte {
	file_tag_proto_rawDescOnce.Do(func() {
		file_tag_proto_rawDescData = protoimpl.X.CompressGZIP(file_tag_proto_rawDescData)
	})
	return file_tag_proto_rawDescData
}

var file_tag_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_tag_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_tag_proto_goTypes = []interface{}{
	(EntityType)(0),            // 0: tag.EntityType
	(ActionType)(0),            // 1: tag.ActionType
	(BasicTagType)(0),          // 2: tag.BasicTagType
	(*Tag)(nil),                // 3: tag.Tag
	(*GetTagListReq)(nil),      // 4: tag.GetTagListReq
	(*GetTagListResp)(nil),     // 5: tag.GetTagListResp
	(*CreateTagReq)(nil),       // 6: tag.CreateTagReq
	(*CreateTagResp)(nil),      // 7: tag.CreateTagResp
	(*UpdateTagReq)(nil),       // 8: tag.UpdateTagReq
	(*UpdateTagResp)(nil),      // 9: tag.UpdateTagResp
	(*BasicTag)(nil),           // 10: tag.BasicTag
	(*UpdateBasicTagReq)(nil),  // 11: tag.UpdateBasicTagReq
	(*UpdateBasicTagResp)(nil), // 12: tag.UpdateBasicTagResp
	(*MGetBasicTagReq)(nil),    // 13: tag.MGetBasicTagReq
	(*MGetBasicTagResp)(nil),   // 14: tag.MGetBasicTagResp
	nil,                        // 15: tag.GetTagListResp.TagsEntry
	nil,                        // 16: tag.MGetBasicTagResp.BasicTagsEntry
}
var file_tag_proto_depIdxs = []int32{
	0,  // 0: tag.Tag.EntityType:type_name -> tag.EntityType
	0,  // 1: tag.GetTagListReq.EntityType:type_name -> tag.EntityType
	15, // 2: tag.GetTagListResp.Tags:type_name -> tag.GetTagListResp.TagsEntry
	0,  // 3: tag.CreateTagReq.EntityType:type_name -> tag.EntityType
	1,  // 4: tag.UpdateBasicTagReq.ActionType:type_name -> tag.ActionType
	0,  // 5: tag.UpdateBasicTagReq.EntityType:type_name -> tag.EntityType
	0,  // 6: tag.MGetBasicTagReq.EntityType:type_name -> tag.EntityType
	1,  // 7: tag.MGetBasicTagReq.ActionType:type_name -> tag.ActionType
	16, // 8: tag.MGetBasicTagResp.BasicTags:type_name -> tag.MGetBasicTagResp.BasicTagsEntry
	3,  // 9: tag.GetTagListResp.TagsEntry.value:type_name -> tag.Tag
	10, // 10: tag.MGetBasicTagResp.BasicTagsEntry.value:type_name -> tag.BasicTag
	4,  // 11: tag.TagService.GetTagList:input_type -> tag.GetTagListReq
	6,  // 12: tag.TagService.CreateTag:input_type -> tag.CreateTagReq
	8,  // 13: tag.TagService.UpdateTag:input_type -> tag.UpdateTagReq
	11, // 14: tag.TagService.UpdateBasicTag:input_type -> tag.UpdateBasicTagReq
	13, // 15: tag.TagService.MGetBasicTag:input_type -> tag.MGetBasicTagReq
	5,  // 16: tag.TagService.GetTagList:output_type -> tag.GetTagListResp
	7,  // 17: tag.TagService.CreateTag:output_type -> tag.CreateTagResp
	9,  // 18: tag.TagService.UpdateTag:output_type -> tag.UpdateTagResp
	12, // 19: tag.TagService.UpdateBasicTag:output_type -> tag.UpdateBasicTagResp
	14, // 20: tag.TagService.MGetBasicTag:output_type -> tag.MGetBasicTagResp
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_tag_proto_init() }
func file_tag_proto_init() {
	if File_tag_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tag_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tag_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tag_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tag_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tag_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tag_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tag_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tag_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tag_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBasicTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tag_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBasicTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tag_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MGetBasicTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tag_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MGetBasicTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tag_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_tag_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tag_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tag_proto_goTypes,
		DependencyIndexes: file_tag_proto_depIdxs,
		EnumInfos:         file_tag_proto_enumTypes,
		MessageInfos:      file_tag_proto_msgTypes,
	}.Build()
	File_tag_proto = out.File
	file_tag_proto_rawDesc = nil
	file_tag_proto_goTypes = nil
	file_tag_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TagServiceClient is the client API for TagService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TagServiceClient interface {
	// 自定义TAG 增删改查接口
	GetTagList(ctx context.Context, in *GetTagListReq, opts ...grpc.CallOption) (*GetTagListResp, error)
	CreateTag(ctx context.Context, in *CreateTagReq, opts ...grpc.CallOption) (*CreateTagResp, error)
	UpdateTag(ctx context.Context, in *UpdateTagReq, opts ...grpc.CallOption) (*UpdateTagResp, error)
	// 基本 tag 的修改与查询
	UpdateBasicTag(ctx context.Context, in *UpdateBasicTagReq, opts ...grpc.CallOption) (*UpdateBasicTagResp, error)
	MGetBasicTag(ctx context.Context, in *MGetBasicTagReq, opts ...grpc.CallOption) (*MGetBasicTagResp, error)
}

type tagServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTagServiceClient(cc grpc.ClientConnInterface) TagServiceClient {
	return &tagServiceClient{cc}
}

func (c *tagServiceClient) GetTagList(ctx context.Context, in *GetTagListReq, opts ...grpc.CallOption) (*GetTagListResp, error) {
	out := new(GetTagListResp)
	err := c.cc.Invoke(ctx, "/tag.TagService/GetTagList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagServiceClient) CreateTag(ctx context.Context, in *CreateTagReq, opts ...grpc.CallOption) (*CreateTagResp, error) {
	out := new(CreateTagResp)
	err := c.cc.Invoke(ctx, "/tag.TagService/CreateTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagServiceClient) UpdateTag(ctx context.Context, in *UpdateTagReq, opts ...grpc.CallOption) (*UpdateTagResp, error) {
	out := new(UpdateTagResp)
	err := c.cc.Invoke(ctx, "/tag.TagService/UpdateTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagServiceClient) UpdateBasicTag(ctx context.Context, in *UpdateBasicTagReq, opts ...grpc.CallOption) (*UpdateBasicTagResp, error) {
	out := new(UpdateBasicTagResp)
	err := c.cc.Invoke(ctx, "/tag.TagService/UpdateBasicTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagServiceClient) MGetBasicTag(ctx context.Context, in *MGetBasicTagReq, opts ...grpc.CallOption) (*MGetBasicTagResp, error) {
	out := new(MGetBasicTagResp)
	err := c.cc.Invoke(ctx, "/tag.TagService/MGetBasicTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TagServiceServer is the server API for TagService service.
type TagServiceServer interface {
	// 自定义TAG 增删改查接口
	GetTagList(context.Context, *GetTagListReq) (*GetTagListResp, error)
	CreateTag(context.Context, *CreateTagReq) (*CreateTagResp, error)
	UpdateTag(context.Context, *UpdateTagReq) (*UpdateTagResp, error)
	// 基本 tag 的修改与查询
	UpdateBasicTag(context.Context, *UpdateBasicTagReq) (*UpdateBasicTagResp, error)
	MGetBasicTag(context.Context, *MGetBasicTagReq) (*MGetBasicTagResp, error)
}

// UnimplementedTagServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTagServiceServer struct {
}

func (*UnimplementedTagServiceServer) GetTagList(context.Context, *GetTagListReq) (*GetTagListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTagList not implemented")
}
func (*UnimplementedTagServiceServer) CreateTag(context.Context, *CreateTagReq) (*CreateTagResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTag not implemented")
}
func (*UnimplementedTagServiceServer) UpdateTag(context.Context, *UpdateTagReq) (*UpdateTagResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTag not implemented")
}
func (*UnimplementedTagServiceServer) UpdateBasicTag(context.Context, *UpdateBasicTagReq) (*UpdateBasicTagResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBasicTag not implemented")
}
func (*UnimplementedTagServiceServer) MGetBasicTag(context.Context, *MGetBasicTagReq) (*MGetBasicTagResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MGetBasicTag not implemented")
}

func RegisterTagServiceServer(s *grpc.Server, srv TagServiceServer) {
	s.RegisterService(&_TagService_serviceDesc, srv)
}

func _TagService_GetTagList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagServiceServer).GetTagList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tag.TagService/GetTagList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagServiceServer).GetTagList(ctx, req.(*GetTagListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagService_CreateTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagServiceServer).CreateTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tag.TagService/CreateTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagServiceServer).CreateTag(ctx, req.(*CreateTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagService_UpdateTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagServiceServer).UpdateTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tag.TagService/UpdateTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagServiceServer).UpdateTag(ctx, req.(*UpdateTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagService_UpdateBasicTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBasicTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagServiceServer).UpdateBasicTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tag.TagService/UpdateBasicTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagServiceServer).UpdateBasicTag(ctx, req.(*UpdateBasicTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagService_MGetBasicTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MGetBasicTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagServiceServer).MGetBasicTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tag.TagService/MGetBasicTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagServiceServer).MGetBasicTag(ctx, req.(*MGetBasicTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TagService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tag.TagService",
	HandlerType: (*TagServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTagList",
			Handler:    _TagService_GetTagList_Handler,
		},
		{
			MethodName: "CreateTag",
			Handler:    _TagService_CreateTag_Handler,
		},
		{
			MethodName: "UpdateTag",
			Handler:    _TagService_UpdateTag_Handler,
		},
		{
			MethodName: "UpdateBasicTag",
			Handler:    _TagService_UpdateBasicTag_Handler,
		},
		{
			MethodName: "MGetBasicTag",
			Handler:    _TagService_MGetBasicTag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tag.proto",
}
