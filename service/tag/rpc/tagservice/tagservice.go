// Code generated by goctl. DO NOT EDIT!
// Source: tag.proto

//go:generate mockgen -destination ./tagservice_mock.go -package tagservice -source $GOFILE

package tagservice

import (
	"context"

	"github.com/he2121/go-blog/service/tag/rpc/tag"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	MGetBasicTagResp   = tag.MGetBasicTagResp
	Tag                = tag.Tag
	GetTagListReq      = tag.GetTagListReq
	CreateTagResp      = tag.CreateTagResp
	UpdateBasicTagReq  = tag.UpdateBasicTagReq
	UpdateBasicTagResp = tag.UpdateBasicTagResp
	MGetBasicTagReq    = tag.MGetBasicTagReq
	GetTagListResp     = tag.GetTagListResp
	CreateTagReq       = tag.CreateTagReq
	UpdateTagReq       = tag.UpdateTagReq
	UpdateTagResp      = tag.UpdateTagResp
	BasicTag           = tag.BasicTag

	TagService interface {
		//  自定义TAG 增删改查接口
		GetTagList(ctx context.Context, in *GetTagListReq) (*GetTagListResp, error)
		CreateTag(ctx context.Context, in *CreateTagReq) (*CreateTagResp, error)
		UpdateTag(ctx context.Context, in *UpdateTagReq) (*UpdateTagResp, error)
		//  基本 tag 的修改与查询
		UpdateBasicTag(ctx context.Context, in *UpdateBasicTagReq) (*UpdateBasicTagResp, error)
		MGetBasicTag(ctx context.Context, in *MGetBasicTagReq) (*MGetBasicTagResp, error)
	}

	defaultTagService struct {
		cli zrpc.Client
	}
)

func NewTagService(cli zrpc.Client) TagService {
	return &defaultTagService{
		cli: cli,
	}
}

//  自定义TAG 增删改查接口
func (m *defaultTagService) GetTagList(ctx context.Context, in *GetTagListReq) (*GetTagListResp, error) {
	client := tag.NewTagServiceClient(m.cli.Conn())
	return client.GetTagList(ctx, in)
}

func (m *defaultTagService) CreateTag(ctx context.Context, in *CreateTagReq) (*CreateTagResp, error) {
	client := tag.NewTagServiceClient(m.cli.Conn())
	return client.CreateTag(ctx, in)
}

func (m *defaultTagService) UpdateTag(ctx context.Context, in *UpdateTagReq) (*UpdateTagResp, error) {
	client := tag.NewTagServiceClient(m.cli.Conn())
	return client.UpdateTag(ctx, in)
}

//  基本 tag 的修改与查询
func (m *defaultTagService) UpdateBasicTag(ctx context.Context, in *UpdateBasicTagReq) (*UpdateBasicTagResp, error) {
	client := tag.NewTagServiceClient(m.cli.Conn())
	return client.UpdateBasicTag(ctx, in)
}

func (m *defaultTagService) MGetBasicTag(ctx context.Context, in *MGetBasicTagReq) (*MGetBasicTagResp, error) {
	client := tag.NewTagServiceClient(m.cli.Conn())
	return client.MGetBasicTag(ctx, in)
}
