// Code generated by goctl. DO NOT EDIT!
// Source: message.proto

package server

import (
	"context"

	"github.com/he2121/go-blog/service/message/rpc/internal/logic"
	"github.com/he2121/go-blog/service/message/rpc/internal/svc"
	"github.com/he2121/go-blog/service/message/rpc/message"
)

type MessageServiceServer struct {
	svcCtx *svc.ServiceContext
}

func NewMessageServiceServer(svcCtx *svc.ServiceContext) *MessageServiceServer {
	return &MessageServiceServer{
		svcCtx: svcCtx,
	}
}

//  系统通知的增删改查
func (s *MessageServiceServer) CreateNotification(ctx context.Context, in *message.CreateNotificationReq) (*message.CreateNotificationResp, error) {
	l := logic.NewCreateNotificationLogic(ctx, s.svcCtx)
	return l.CreateNotification(in)
}

func (s *MessageServiceServer) GetNotificationList(ctx context.Context, in *message.GetNotificationListReq) (*message.GetNotificationListResp, error) {
	l := logic.NewGetNotificationListLogic(ctx, s.svcCtx)
	return l.GetNotificationList(in)
}

func (s *MessageServiceServer) UpdateNotification(ctx context.Context, in *message.UpdateNotificationReq) (*message.UpdateNotificationResp, error) {
	l := logic.NewUpdateNotificationLogic(ctx, s.svcCtx)
	return l.UpdateNotification(in)
}

//  消息的增删改查
func (s *MessageServiceServer) CreateMessage(ctx context.Context, in *message.CreateMessageReq) (*message.CreateMessageResp, error) {
	l := logic.NewCreateMessageLogic(ctx, s.svcCtx)
	return l.CreateMessage(in)
}

func (s *MessageServiceServer) GetMessageList(ctx context.Context, in *message.GetMessageListReq) (*message.GetMessageListResp, error) {
	l := logic.NewGetMessageListLogic(ctx, s.svcCtx)
	return l.GetMessageList(in)
}

func (s *MessageServiceServer) UpdateMessage(ctx context.Context, in *message.UpdateMessageReq) (*message.UpdateMessageResp, error) {
	l := logic.NewUpdateMessageLogic(ctx, s.svcCtx)
	return l.UpdateMessage(in)
}
